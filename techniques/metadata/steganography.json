{
  "technique_id": "NOCTIS-T001",
  "name": "Steganography",
  "category": "steganography",
  "description": "Hides payloads in legitimate files using steganographic techniques",
  "source_files": [
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\ExtractPePayloadFromPng\\Extract.c",
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\ExtractPePayloadFromPng\\Main.c",
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\ExtractPePayloadFromPng\\Reed-Solomon.c",
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\RunPeFile\\Extract.c",
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\RunPeFile\\Reed-Solomon.c",
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\RunPeFile\\StackSpoofing.c",
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\RunPeFile\\UnpackAndHide.c",
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\RunPeFile\\Utilities.c",
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\ExtractPePayloadFromPng\\Reed-Solomon.h",
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\RunPeFile\\Reed-Solomon.h",
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\RunPeFile\\StackSpoofing.h",
    "MaldevAcademy\\Loader2\\MaldevAcademyLdr.2-main\\RunPeFile\\Structures.h",
    "MaldevAcademy\\Loader1\\MaldevAcademyLdr.1-main\\Loader\\Structs.h",
    "MyOwn\\TheSilencer\\TheSilencer-main\\Loader\\Structs.h"
  ],
  "mitre_attack": [],
  "dependencies": [
    "string.h",
    "math.h",
    "compressapi.h",
    "stdio.h",
    "Extract.h",
    "Windows.h",
    "Reed-Solomon.h",
    "wincodec.h"
  ],
  "compatible_with": [],
  "incompatible_with": [],
  "opsec": {
    "detection_risk": "unknown",
    "stability": "unknown",
    "tested_on": [],
    "bypasses": [],
    "detected_by": []
  },
  "code_blocks": {
    "file": "Extract.c",
    "functions": [
      "FindMarkerExact",
      "QimDecodeCoeffs",
      "BuildBitStreamFromLevelAcrossRgb",
      "ConvertBitsToBytesMSB",
      "ParseHeaderPython",
      "DwtDb1Periodization2D",
      "ReedSolomonDecodeChunked",
      "TryDecodeHeader",
      "XpressHuffmanDecompress",
      "Crc32Compute",
      "RepDecodeSoftScores",
      "DecodePngToRgbaWic",
      "ScoresToHardBits",
      "ExtractPeFromPngAligned",
      "StripRsParity"
    ]
  },
  "variants": [],
  "author": "MalDev Academy",
  "source_project": "MaldevAcademy",
  "last_updated": "2025-10-05T07:04:45.711063"
}